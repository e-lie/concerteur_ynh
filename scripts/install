#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

source .fonctions	# Charge les fonctions génériques habituellement utilisées dans le script

TRAP_ON # Active trap pour arrêter le script si une erreur est détectée.



domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
admin_concerteur=$YNH_APP_ARG_ADMIN_CONCERTEUR
app=$YNH_APP_INSTANCE_NAME

# Path need a trailing slash, and location does not.
# See conf/nginx.conf* usage
location=$path
if [[ ! $path == */ ]]; then
    # no trailing slash, so add it
    path=$path/
fi
if [[ ! "$location" == "/" ]]; then
    # remove possible trailing slash
    location=${location%/}
fi


# Source app helpers
source /usr/share/yunohost/helpers

CHECK_VAR "$app" "app name not set"

CHECK_USER "$admin_concerteur"

CHECK_DOMAINPATH

CHECK_FINALPATH

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path
ynh_app_setting_set $app admin $admin_concerteur

# Create final_path and check
sudo mkdir "$final_path"
sudo cp -r ../sources/. "$final_path"
sudo chown -R www-data: $final_path
ynh_app_setting_set $app final_path $final_path
ynh_app_setting_set $app unprotected_uris "/"

sudo apt-get update
sudo apt-get install -y python3-setuptools python3-pip python-virtualenv
sudo apt-get install python

sudo mkdir "$final_path/venv"
sudo chmod -R 777 "$final_path/venv"

sudo virtualenv -p python3 "$final_path/venv"

# Generate MySQL password and create database
dbuser=$app
dbname=$app
dbpass=$(ynh_string_random 12)
ynh_app_setting_set "$app" mysqlpwd "$dbpass"
ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"


sudo sed -i "s@DB_LOGIN@$dbuser:$dbpass@g" "$final_path/env_conf"
sudo sed -i "s@DB_NAME@$dbname@g" "$final_path/env_conf"
sudo sed -i "s@FINAL_PATH@$final_path@g" "$final_path/env_conf"

#pip3 install -r "$final_path/requirements.txt" -t "$final_path/venv"
sudo bash -c "source $final_path/venv/bin/activate && pip3 install -r $final_path/requirements.txt"

#init db using flask migrate utility
sudo bash -c "source $final_path/env_conf && which python3 && python3 $final_path/manage.py db init"
sudo bash -c "source $final_path/env_conf && python3 $final_path/manage.py db migrate"
sudo bash -c "source $final_path/env_conf && python3 $final_path/manage.py db upgrade"

nginx_conf=../conf/nginx.conf
sed -i "s@FINAL_PATH@$final_path@g" $nginx_conf
sed -i "s@APP_PATH@$path@g" $nginx_conf
sed -i "s@APP_LOCATION@$location@g" $nginx_conf

sudo cp $nginx_conf /etc/nginx/conf.d/$domain.d/$app.conf

uwsgi_conf="$final_path/concerteur.ini"
sed -i "s@APP_LOCATION@$location@g" $uwsgi_conf

systemd_service=../conf/concerteur.service
sed -i "s@FINAL_PATH@$final_path@g" $systemd_service

sudo cp $systemd_service /etc/systemd/system/


sudo systemctl start concerteur.service
sudo systemctl reload nginx

